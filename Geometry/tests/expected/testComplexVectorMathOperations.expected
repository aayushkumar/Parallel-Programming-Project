****************************
Vectors - A, B, C, and D
A - {7.4 + i 1, 2 + i 0, 5 + i 1, 1 + i 0, 3 + i 2, -42 + i 0}
B - {4 + i 2, 2.3 + i 0, 5.8 + i 0, 6 + i 0, -12 + i 0, 39289 + i 0}
C - {23 + i 0, 5 + i 0, -14 + i 0, 32 + i 0, -21 + i 1, 78 + i 0}
D - {23 + i 0, 5 + i 0, -14 + i 0, 32 + i 0, -21 + i 0, 78 + i 0}

****************************
i - {1 + i 0, 0 + i 0, 0 + i 0}
j - {0 + i 0, 1 + i 0, 0 + i 0}
k - {0 + i 0, 0 + i 0, 1 + i 0}
Axis Rotation
K Rotated 1.5708 radians around I axis - 
Answer within tolerance 1e-16 of expected result: j - {0 + i 0, 1 + i 0, 0 + i 0}
Angle Rotation
K Rotated 1.5708 radians around I axis - 
Answer within tolerance 1e-16 of expected result: j - {0 + i 0, 1 + i 0, 0 + i 0}
Axis Rotation
I Rotated 1.5708 radians around J axis - 
Answer within tolerance 1e-16 of expected result: k - {0 + i 0, 0 + i 0, 1 + i 0}
Angle Rotation
I Rotated 1.5708 radians around J axis - 
Answer within tolerance 1e-16 of expected result: k - {0 + i 0, 0 + i 0, 1 + i 0}
Axis Rotation
J Rotated 1.5708 radians around K axis - 
Answer within tolerance 1e-16 of expected result: i - {1 + i 0, 0 + i 0, 0 + i 0}
Angle Rotation
J Rotated 1.5708 radians around K axis - 
Answer within tolerance 1e-16 of expected result: i - {1 + i 0, 0 + i 0, 0 + i 0}
I Rotated 0.785398 radians around J axis and 0.785398 radians around K axis: 
vector - {0.5 + i 0, -0.707107 + i 0, 0.5 + i 0}
J Rotated 0.785398 radians around I axis and 0.785398 radians around K axis: 
vector - {0.707107 + i 0, 0.5 + i 0, -0.5 + i 0}
K Rotated 0.785398 radians around I axis and 0.785398 radians around J axis: 
vector - {-0.707107 + i 0, 0.5 + i 0, 0.5 + i 0}

****************************
vector = A + B
vector - {<NON_POSITIVE DIMENSION 0>}
vector - {11.4 + i 3}
vector - {11.4 + i 3, 4.3 + i 0}
vector - {11.4 + i 3, 4.3 + i 0, 10.8 + i 1}
vector - {11.4 + i 3, 4.3 + i 0, 10.8 + i 1, 7 + i 0}
vector - {11.4 + i 3, 4.3 + i 0, 10.8 + i 1, 7 + i 0, -9 + i 2}
vector - {11.4 + i 3, 4.3 + i 0, 10.8 + i 1, 7 + i 0, -9 + i 2, 39247 + i 0}

****************************
vector = A - B
vector - {<NON_POSITIVE DIMENSION 0>}
vector - {3.4 + i -1}
vector - {3.4 + i -1, -0.3 + i 0}
vector - {3.4 + i -1, -0.3 + i 0, -0.8 + i 1}
vector - {3.4 + i -1, -0.3 + i 0, -0.8 + i 1, -5 + i 0}
vector - {3.4 + i -1, -0.3 + i 0, -0.8 + i 1, -5 + i 0, 15 + i 2}
vector - {3.4 + i -1, -0.3 + i 0, -0.8 + i 1, -5 + i 0, 15 + i 2, -39331 + i 0}

****************************
Check Magnitude Function
dim = 0 magnitude A = 0.000
dim = 0 magnitude B = 0.000
dim = 1 magnitude A = 7.467
dim = 1 magnitude B = 4.472
dim = 2 magnitude A = 7.722
dim = 2 magnitude B = 4.854
dim = 3 magnitude A = 9.243
dim = 3 magnitude B = 7.306
dim = 4 magnitude A = 9.295
dim = 4 magnitude B = 9.402
dim = 5 magnitude A = 9.755
dim = 5 magnitude B = 15.215
dim = 6 magnitude A = 43.036
dim = 6 magnitude B = 39289.003

****************************
Check Dot Product Function
value = A . B 
dim = 0 dot product = 0.000 + 0.000 i
dim = 1 dot product = 27.600 + 18.800 i
dim = 2 dot product = 32.200 + 18.800 i
dim = 3 dot product = 61.200 + 24.600 i
dim = 4 dot product = 67.200 + 24.600 i
dim = 5 dot product = 31.200 + 0.600 i
dim = 6 dot product = -1650106.800 + 0.600 i

****************************
Check Cross Product Function
 A x B in 3-D
vector - {0.1 + i -2.3, -24.92 + i 8.2, 9.02 + i -1.7}

****************************
Checking centroid function
vector - {<NON_POSITIVE DIMENSION 0>}
vector - {11.4667 + i 1}
vector - {11.4667 + i 1, 3.1 + i 0}
vector - {11.4667 + i 1, 3.1 + i 0, -1.06667 + i 0.333333}
vector - {11.4667 + i 1, 3.1 + i 0, -1.06667 + i 0.333333, 13 + i 0}
vector - {11.4667 + i 1, 3.1 + i 0, -1.06667 + i 0.333333, 13 + i 0, -10 + i 1}
vector - {11.4667 + i 1, 3.1 + i 0, -1.06667 + i 0.333333, 13 + i 0, -10 + i 1, 13108.3 + i 0}

****************************
Check Normalisation Function
2-D

A - {7.4 + i 1, 2 + i 0}
A - {0.958328 + i 0.129504, 0.259007 + i 0}
mag = 1.000
3-D

B - {4 + i 2, 2.3 + i 0, 5.8 + i 0}
B - {0.547462 + i 0.273731, 0.314791 + i 0, 0.79382 + i 0}
mag = 1.000
5-D

C - {23 + i 0, 5 + i 0, -14 + i 0, 32 + i 0, -21 + i 1}
C - {0.488765 + i 0, 0.106253 + i 0, -0.297509 + i 0, 0.680021 + i 0, -0.446264 + i 0.0212506}
mag = 1.000

****************************
Check StGermain_ComplexVectorCrossProductMagnitude
A - {1 + i 1, 2 + i 0, 3 + i 0}
B - {4 + i 0, 5 + i 0, 6 + i 3}
mag = 7.6 + -7.37 i (2D)
mag = 22.4 + -18.6 i (3D)

****************************
Check StGermain_ComplexScalarTripleProduct 
matrix[0] - {1 + i 1, 2 + i 0, 3 + i 2}
matrix[1] - {4 + i 0, 5 + i 3, 6 + i 0}
matrix[2] - {7 + i 1, 8 + i 0, 11 + i 1}
scalar triple product: value = 14.0000000 - 32.0000000 i
scalar triple product: value = 14.0000000 - 32.0000000 i
scalar triple product: value = 14.0000000 - 32.0000000 i

****************************
Check Vector_ToComplexVector function 
realVector - {1.000000, 2.000000, 3.000000}
matrix[0] - {1 + i 0, 2 + i 0, 3 + i 0}

****************************
Check ComplexVector_ToVector function 
matrix[0] - {5 + i 0, 6 + i 0, 7 + i 0}
realVector - {5.000000, 6.000000, 7.000000}
